class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> ans = new LinkedList<>();

        for(int i = 0; i < nums.length; i ++){
            // 不能有重复的三元组
            if(i > 0 && nums[i] == nums[i - 1])continue;
            // 找出nums[i] + nums[j] == -nums[k]
            int l = i + 1, r = nums.length - 1;
            int target = - nums[i];
            // 两数之和
            while(l < r){
                //如果小于的话
                int res = nums[l] + nums[r];
                if(res == target){
                   // 找到了 存进去
                   ans.add(Arrays.asList(nums[i],nums[l],nums[r]));
                   r --;
                   l ++;
                   //往后走
                  while(l < r && nums[l] == nums[l - 1]) l ++;
                  while(l < r && nums[r] == nums[r + 1]) r --;
                }else if(res > target){
                    r --;
                }else{
                    l ++;
                }
            }
        }
        return ans;
    }
}

//runtime:33 ms
//memory:51.4 MB
